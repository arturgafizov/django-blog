# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-AWS-ElasticBeastalk

env:
  PROJECT_PATH: "/home/ubuntu/blog"

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  testing:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Install flake8
        run: |
          python -m pip install flake8 --upgrade pip
          ls -la
      - name: Run flake8
        run: |
          cd web
          flake8 .

  build:
      runs-on: ubuntu-latest
      needs: ['testing']
      steps:
        - uses: actions/checkout@v2
        - name: Install SSH Key
          uses: shimataro/ssh-key-action@v2
          with:
            key: ${{ secrets.AWS_PRIVATE_KEY }}
            known_hosts: 'empty'
        - name: Adding Known Hosts
          run: ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts
        - name: Deploy with rsync
          run: rsync -az . ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}:${{ env.PROJECT_PATH }}
        - name: Run build in the server
          uses: garygrossgarten/github-action-ssh@release
          with:
            command: |
              cd ${{ env.PROJECT_PATH }}
              sudo docker-compose -f prod.yml -f prod.certbot.yml up -d --build
            host: ${{ secrets.AWS_HOST }}
            username: ${{ secrets.AWS_USER }}
            privateKey: ${{ secrets.AWS_PRIVATE_KEY}}
